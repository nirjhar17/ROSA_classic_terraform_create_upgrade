## Account roles upgrade
## To run terraform apply you need to set up some variables. This guide uses environmental variables. For more on Terraform variables, see Managing Variables in the Terraform documentation.

##Run the following commands to export your variables. Provide your values in lieu of the brackets. Note that any values declared in the variables.tf are the default values if you do not export a superseding value.

##    This variable should be your full OpenShift Cluster Manager offline token that you generated in the prerequisites.

    export TF_VAR_token=<ocm_offline_token>

## This value should be the prefix for your Operator role.

export TF_operator_role_prefix=<prefix_name>

##This value should always point to https://api.openshift.com.

export TF_VAR_url=https://api.openshift.com

## Optional: You can set the account-role prefix with this variable. This value cannot end with a hyphen (-). If the value is empty, the module generates a string that starts with account-role- and combines it with a string of four random characters.

export TF_VAR_account_role_prefix=<account_role_prefix>

## Optional: You can set the desired OpenShift version with this variable. The default is available from the ROSA CLI with rosa list version |grep yes. This should be in the format of x.y, such as 4.13

export TF_VAR_openshift_version=<choose_openshift_version>

##In your local copy of the account-roles folder, run the following command:

terraform init

## Running this command accesses all the necessary provider information to apply your Terraform plan.

## Optional: Run the plan command to ensure that your Terraform files build correctly without errors. This is not required to apply your Terraform plans.

terraform plan -out account-roles.tfplan

## Run the apply command to create your account roles.
## Note: If you did not run the plan command, you can simply just apply without specifying a file.

terraform apply <"account-roles.tfplan">

## The Terraform applies the plan and creates the account roles. You will see a prompt to confirm you want to create these resources. Enter yes, then the process will complete with your resources.
##========================================================

##Export the TF_VAR_openshift_version with the intended version. Your value must be prepended with openshift-v. export TF_VAR_openshift_version=<version_number> 
export TF_VAR_openshift_version=openshift-v4.14

## Change the variable.tf file variable rosa_openshift_version value for default to the desired version
#e.g
variable "rosa_openshift_version" {
  type        = string
  default     = "4.14.18"
  description = "Desired version of OpenShift for the cluster, for example '4.15.0'. If version is greater than the currently running version, an upgrade will be scheduled."
}

## Add the upgrade_acknowledgements_for flag in the main.tf file in the resource section
resource "rhcs_cluster_rosa_classic" "rosa_sts_cluster" {
  name                 = local.cluster_name
  cloud_region         = var.aws_region
  multi_az             = false
  aws_account_id       = data.aws_caller_identity.current.account_id
  availability_zones   = ["us-east-1a"]
  tags                 = var.additional_tags
  version              = var.rosa_openshift_version
  compute_machine_type = var.machine_type
  replicas             = local.worker_node_replicas
  autoscaling_enabled  = false
  sts                  = local.sts_roles
  upgrade_acknowledgements_for = 4.14

